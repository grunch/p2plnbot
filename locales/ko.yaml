start: |
  ---———— DISCLAIMER ————---

  ${disclaimer}
  ---———— DISCLAIMER ————---
  
  이 텔레그램 봇은 당신이 라이트닝 네트워크를 통해 P2P로 비트코인을 전송하는 것을 도와줍니다.
  봇을 시작한 후에, 다음과 같은 명령어들을 사용할 수 있습니다:

  1. /buy 혹은 /sell 명령어를 통해 생성한 주문을 마켓에 등록하고 다음 지시를 따릅니다.

  2. 다른 사용자가 당신의 주문에 "구매" 혹은 "판매" 버튼을 누를 때까지 기다립니다. 당신도 다른 사람들의 주문을 같은 방법으로 수락할 수 있습니다!
  
  3. 당신의 주문과 평판은 ${channel} 채널에서 보여집니다.

  4. 비트코인을 판매하는 경우, 봇은 해당 주문을 ${channel} 채널에 등록하고, 다른 누군가가 수락하기를 기다립니다. 이 판매 주문은 다른 사용자가 수락하기 전이라면 언제든지 /cancel 명령어로 취소할 수 있습니다.

  5. 누군가가 당신의 주문을 수락할 경우, 봇은 당신에게 라이트닝 인보이스에 결제할 것을 요구합니다. 이 결제 내역은 에스크로 결제이며, 당신의 라이트닝 지갑에 아직 묶여 있는 상태입니다. 이 주문은 주문이 수락된 후 최대 ${orderExpiration}시간이 지난 후 비활성화됩니다.
  
  봇은 구매자가 누구인지 알려주며, 당신은 구매자에게 어떤 형태로 법정화폐를 지불받을지에 대한 안내를 줄 수 있습니다. 법정화폐 결제를 받은 후에, 당신은 구매자에게 비트코인을 전송해주기 위해 반드시 /release 명령어를 입력해야 합니다.

  6. 비트코인을 구매하려면, /buy 명령어를 통해 구매 주문을 등록하고, 판매자가 수락하기를 기다리면 됩니다. 해당 주문은 /cancel 명령어를 입력하여 언제든지 취소가 가능합니다. 

  7. 누군가가 당신의 구매 주문을 수락하게 되면, 당신은 반드시 라이트닝 인보이스를 생성하여 봇에게 입력해주어야 합니다. 이후, 판매자와 연락하여 법정화폐 결제에 대한 안내를 받을 수 있습니다. 판매자에게 법정화폐를 지불한 후, 반드시 봇에게 /fiatsent 명령어를 입력하세요. 봇은 당신의 인보이스로 sats를 보내줄 것입니다.

  8. 판매 주문을 수락했다면, 즉 비트코인을 구매할 경우, 당신은 sats를 받기 위한 라이트닝 인보이스를 생성해야 하고, 법정화폐 결제 방법에 대해 판매자에게 문의해야 합니다. 판매자는 법정화폐 결제를 받은 후에 /release 명령어를 입력하여 sats가 당신의 지갑으로 보내지도록 해야 합니다.
  
  9. 구매 주문을 수락했다면, 즉 비트코인을 판매할 경우, 당신은 봇이 안내해주는 라이트닝 인보이스를 결제해야 합니다. 해당 비트코인은 구매자가 법정화폐 결제를 마칠 때까지 봇에 묶여 있을 것입니다. 구매자에게 연락하여 법정화폐 결제 방법에 대해 알려주세요. 법정화폐 결제를 받은 후에는, 반드시 봇에 묶여 있는 자금을 해제해주어야 합니다; /release 명령어를 입력하면, 비트코인은 자동으로 구매자의 지갑으로 보내집니다.

  봇 사용법에 대해 더 많은 정보가 필요하다면 아래 링크를 참고하세요 👇

  https://lnp2pbot.com/learn
  
  빠르고 안전한 거래되시길!
init_bot_error: 봇을 이용하기 위해서는, 먼저 /start 명령어로 봇을 초기화해주어야 합니다.
non_handle_error: 👤 봇을 이용하기 위해서는, 당신의 텔레그램 사용자명 (Username)을 활성화해야 합니다. 활성화시키려면, 왼쪽 위에 있는 메뉴를 열고, 설정 (setting) -> 프로필 변경 (edit profile) -> 사용자명 (username)을 선택하세요.
invoice_payment_request: |
  누군가 당신에게 ${order.amount} sats를 ${currency} ${order.fiat_amount}로 구매하기를 희망합니다.

  Buyer Reputation: ${rate}, 봇 사용일수: ${days}

  판매 프로세스를 시작하려면 이 인보이스에 결제해주세요. 이 인보이스는 ${expirationTime} 분 후에 만료됩니다.
pending_sell: |
  📝 당신의 주문이 ${channel} 채널에 등록되었습니다.
  
  다른 사용자가 당신의 주문을 수락할 때까지 기다려야 합니다. 주문은 ${orderExpirationWindow} 시간 동안 채널에서 보여집니다.

  당신은 다른 사용자가 이 주문을 수락하기 전에 아래 명령어를 입력하여 취소할 수 있습니다.👇
cancel_order_cmd: |
  /cancel ${orderId}
pending_buy: |
  📝 당신의 비트코인 구매 주문은 ${channel} 채널에서 활성화되어 있습니다.

  다른 사람이 주문을 수락할 때까지 기다려야 합니다. 이 주문은 ${orderExpirationWindow} 시간 후에 만료됩니다.

  당신은 다른 사용자가 이 주문을 수락하기 전에 다음 명령어를 수행하여 취소할 수 있습니다 👇
must_be_int: ${fieldName}은 반드시 숫자여야만 합니다.
must_be_numeric: ${fieldName}은 반드시 숫자형이어야만 합니다.
sats_amount: 비트코인 액수 (sats)
fiat_amount: 법정화폐 액수
sell_correct_format: |
  /sell \<_비트코인 액수_\> \<_법정화폐 액수_\> \<_거래 통화_\> \<_결제 방법_\> \[_프리미엄/할인_\]

  1000 \(KRW\_)에 500 사토시를 판매하는 주문을 생성하고 법정화폐 결제 방법을 명시할 때, 위의 예시에서 \<\>와 \[\]는 빼는 것을 잊지 마세요.

  `/sell 500 1000 KRW "결제 방법"`

  3%의 \(프리미엄\)을 얹어서 판매 주문을 만들 때에는, \<_법정화폐 액수_\> 앞에 파라미터 0을 추가해야 하고, 마지막 파라미터로 3을 넣어주세요. 봇은 비트코인 시장가에 프리미엄 금액을 더해서 판매가를 계산해 줄 것입니다.
  
  `/sell 0 1000 KRW "결제 방법" 3`

  판매 액수 범위를 제시하며 주문을 생성하기 위해서는, 고정된 법정화폐 금액 대신 최소 및 최대 금액을 하이픈 *\-*으로 분리해서 표현하면 됩니다.

  `/sell 0 10000\-50000 KRW "결제 방법" 3`
buy_correct_format: |
  /buy \<_비트코인 액수_\> \<_법정화폐 액수_\> \<_거래 통화_\> \<_결제 방법_\> \[_프리미엄/할인_\]

  500 사토시를 1000 \(KRW\)에 구매하는 주문을 생성하고 법정화폐 결제 방법을 명시할 때, 위의 예시에서 \<\>와 \[\]는 빼는 것을 잊지 마세요.
  
  `/buy 500 1000 KRW "카카오톡 오픈챗 송금"`

  지정가 거래를 원치 않고 시장가보다 낮은 가격에 구매하고 싶을 경우, 구매 주문에 할인율을 적용하여 구매 주문을 만들 수 있습니다. 해당 할인율은 주문이 등록되는 시점의 시장가에 적용됩니다. 이를 위해서는 \<_비트코인 액수_\> 앞에 파라미터 0을 추가하면, 봇은 비트코인 시장가에 프리미엄 금액을 더해서 구매 희망 가격을 계산해 줄 것입니다. 2%의 할인율을 적용하고자 한다면, 마지막 파라미터로 \-2를 넣어주세요.
  
  `/buy 0 1000 KRW "payment method" \-2`

  구매 액수 범위를 제시하며 주문을 생성하기 위해서는, 고정된 법정화폐 금액 대신 최소 및 최대 금액을 하이픈 *\-*으로 분리해서 표현하면 됩니다.

  `/buy 0 1000\-50000 KRW "payment method" \-2`
min_invoice_amount: 라이트닝 인보이스는 최소 ${minPaymentAmount} 사토시보다 크거나 같아야 합니다.
min_expiration_time: 인보이스의 초과 시간은 최소 ${expirationTime} 분이어야 합니다.
invoice_expired: 인보이스가 만료되었습니다.
invoice_expired_long: |
  라이트닝 인보이스가 만료되었습니다. 다음 명령어를 입력하여 비트코인을 받을 새로운 인보이스를 봇에게 보낼 수 있습니다 👇
setinvoice_cmd_order: |
  /setinvoice ${orderId} \\<라이트닝 인보이스\\>
invoice_require_destination: 인보이스는 수신자의 주소를 필요로 합니다.
invoice_require_hash: 인보이스에는 해쉬 값이 포함되어야 합니다.
order_id_invalid: 주문 ID가 유효하지 않습니다.
order_invalid_type: 이런 ${type} 형태의 주문은 유효하지 않습니다.
order_already_taken: 이 주문은 이미 다른 사용자가 수락하였습니다.
invalid_data: 유효하지 않은 데이터를 보냈습니다. 다시 시도해보세요.
begin_take_buy: |
  🤖 주문을 수락하려면 `계속` 버튼을 눌러 주세요. `취소` 버튼을 누르면, 당신은 해당 주문에서 나오게 되고, 주문은 마켓 채널에 재등록됩니다. 주문이 만료되기까지 ${expirationTime}분 남았습니다. 👇
continue: 계속
cancel: 취소
pay_invoice: 거래를 시작하기 위해 ${currency} ${fiatAmount}에 해당되는 ${amount} 사토시를 이 라이트닝 인보이스에 지불해 주세요.
payment_received: |
  🤑 결제가 확인되었습니다.

  이제, 봇은 구매자의 지갑에 사토시를 보낼 수 있도록 구매자에게 라이트닝 인보이스를 요청할 것입니다. 구매자가 인보이스를 보내는 즉시 거래 참여자들에게 알려 드리겠습니다.

  잠시만 기다려주세요. 구매자가 응답하지 않을 경우, 결제된 담보물은 당신에게 그대로 돌아오게 됩니다.
someone_took_your_order: |
  🤖 누군가 당신의 주문을 수락하였고 봇에게 사토시를 이미 보냈습니다. 바로 돈을 보낼 수 있고 자금 동결의 위험이 없는 법정화폐 결제 방법을 사용하세요.
  
  모종의 이유로 당신의 법정화폐 결제 솔루션이 결제를 못하게 막고 있을 경우, 자금이 ${expirationTime} 시간 안에 상대방에게 도착하지 않는다면, 사토시들은 판매자에게 돌아가며 구매자는 사토시를 받지 못할 위험에 빠지게 됩니다. 봇은 판매자에게 다시 사토시를 보내도록 강제할 수 없습니다.
  
  판매자 평판: ${rate}, 봇 사용 일수: ${days}

  위 내용을 이해하고 동의한다면, 아래 버튼을 눌러 계속해주세요 👇
you_took_someone_order: |
  🤖 당신은 이 판매 주문을 수락하였습니다. 바로 돈을 보낼 수 있고 자금 동결의 위험이 없는 법정화폐 결제 방법을 사용하세요.

  \\*모종의 이유로 당신의 법정화폐 결제 솔루션이 결제를 못하게 막고 있을 경우, 자금이 ${expirationTime} 시간 안에 상대방에게 도착하지 않는다면, 사토시들은 판매자에게 돌아가며 구매자는 사토시를 받지 못할 위험에 빠지게 됩니다. 봇은 판매자에게 다시 사토시를 보내도록 강제할 수 없습니다\\.*

  위 내용을 이해하고 동의한다면, 아래 버튼을 눌러 계속해주세요 👇
get_in_touch_with_seller: |
  🤖 주문 ID: #${orderId}

  사용자 @${sellerUsername}와 연락해서 어떻게 돈을 보낼지에 대해 좀 더 자세한 정보를 얻으세요. ${paymentMethod}를 사용해서 ${currency} ${fiatAmount}를 보내야 합니다.
  
  돈을 보냈다면, 아래 명령어를 통해 봇에게 알려주세요 👇
fiatsent_order_cmd: /fiatsent
get_in_touch_with_buyer: |
  🤖 주문 ID: #${orderId}

  @${buterUsername}와 연락해서 어떻게 당신에게 ${paymentMethod}를 사용해서 ${currency} ${fiatAmount}를 보내야 하는지에 대해 알려주세요. 구매자가 당신에게 법정화폐 결제를 마쳤다고 확인하기 전까지는 절대로 비트코인을 release해서는 안 됩니다.
  
  법정화폐 입금을 확인한 후에, 당신은 비트코인의 잠금을 해제해 주어야 합니다.
buyer_took_your_order: |
  🤖 주문 ID: #${orderId}

  @${buyerUsername}가 당신의 주문을 수락하여 당신에게서 비트코인을 구매하기를 원합니다. 구매자와 연락해서 @${buterUsername}와 연락해서 어떻게 당신에게 ${paymentMethod}를 사용해서 ${currency} ${fiatAmount}를 보내야 하는지에 대해 알려주세요.

  법정화폐 입금을 확인한 후에는 비트코인을 release해주어야 합니다.
waiting_seller_to_pay: '판매자에게 결제 요청을 보냈고, 판매자는 주문 ID #${orderId}에 사토시를 보낼 것입니다. 결제가 이루어지는 대로, 거래자들 모두에게 알려드리겠습니다.'
sell_success: 당신의 비트코인 판매가 @${buyerUsername}의 결제를 확인함으로써 완료되었습니다. ⚡️🍊⚡️
funds_released: 🕐 @${sellerUsername} 님이 비트코인의 락업을 해제했고, 제공된 인보이스로 곧 결제가 완료될 것입니다. 논커스터디얼 지갑의 경우, 온라인 상태로 유지해서 결제를 받을 수 있게 해주세요.
rate_counterpart: '거래 상대방을 평가해주세요:'
cant_process_order: 이 주문은 처리될 수 없습니다. ID가 정확한지 확인해 주세요.
cant_release_order: 이 주문은 락업 해제될 수 없습니다. 구매자가 비트코인을 받을 인보이스를 아직 보내지 않았습니다.
no_id_related: 해당 ID로는 등록된 주문이 없습니다.
sell_sats: 비트코인 판매
buy_sats: 비트코인 구매
order_detail: |
  ID: `${order._id}`

  Status: ${status}

  Creator: @${creator || ''}

  Buyer: @${buyerUsername || ''}

  Buyer reputation: ${buyerReputation}

  Seller: @${sellerUsername || ''}

  Seller reputation: ${sellerReputation}

  Order Amount \\(sats\\): ${order.amount}

  Bot Fee \\(sats\\): ${fee}

  Routing Fee \\(sats\\): ${order.routing_fee}

  Fiat Amount \\(fiat\\) ${order.fiat_code}: ${order.fiat_amount}

  Order payment method: ${paymentMethod}

  Premium/discount: ${priceMargin}

  Created: ${createdAt}

  Taken: ${takenAt || ''}

  seller invoice hash: `${order.hash || ''}`

  seller invoice secret: `${order.secret || ''}`

  buyer payment request: `${order.buyer_invoice || ''}`
seller: seller
buyer: buyer
dispute_started_channel: |
  User ${type} @${initiatorUser.username} 
  has started a dispute with @${counterPartyUser.username} for the order

  ${detailedOrder}

  @${initiatorUser.username} has been involved in ${initiatorUser.disputes} disputes
  @${counterPartyUser.username} has been involved in ${counterPartyUser.disputes} disputes
you_started_dispute_to_buyer: 🥴 You have started a dispute for your buy order, we will contact you and your counterparty to sort it out.
buyer_started_dispute_to_seller: '🥴 The buyer has initiated a dispute for your order with ID: ${orderId}, we will contact you and your counterparty to resolve it.'
you_started_dispute_to_seller: 🥴 You have started a dispute for your sell order, we will contact you and your counterparty to sort it out.
seller_started_dispute_to_buyer: '🥴 The Seller has initiated a dispute for your order with ID: ${orderId}, we will contact you and your counterparty to resolve it.'
must_be_valid_currency: 'Fiat_code must be a valid code, for example: USD, EUR. Check the full list with the command /listcurrencies'
must_be_number_or_range: 'Fiat_amount must be a number or numeric range in the  <minimum>-<maximum> format'
invalid_lightning_address: Invalid lightning address
unavailable_lightning_address: Unavailable lightning address ${la}
help: |
  /sell <_sats amount_> <_fiat amount_> <_fiat code_> <_payment method_> [premium/discount] - Creates a Sell order
  /buy <_sats amount_> <_fiat amount_> <_Fiat code_> <_payment method_> [premium/discount] - Creates a Purchase Order
  /takeorder <_order id_> - Allows the user to take an order from the chat with the bot without going to the channel where it was published
  /info - Shows additional info about the bot
  /showusername - Toggles off the username display in each new order created. Default value is set to false
  /showvolume - Shows trade volume when each order is created, default value is false
  /setinvoice <_order id_> <_lightning invoice_> - This command allows the buyer to update the lightning invoice where to receive the sats 
  /setaddress <_lightning address / off_> - Allows the buyer to establish a static payment address (lightning address), _off_ to deactivate 
  /setlang - Allows the user to change the language
  /settings - Displays the user's current settings
  /listorders - Use this command to list all your pending transactions 
  /listcurrencies - Lists all the currencies we can use to without indicatin the amount in sats. 
  /fiatsent <_order id_> - Buyer informs that he has already sent FIAT money to seller
  /release <_order id_> - Seller releases satoshis 
  /dispute <_order id_> - Opens a dispute between participant parties
  /disclaimer - Displays disclaimer
  /cancel <_order id_> - Cancel an order that has not been taken yet
  /cancelall - Cancel all posted and untaken orders
  /disclaimer - Shows the terms and conditions when using the bot

  Nostr:
  /setnpub <_nostr npub_> - Updates your nostr pubkey, this command is only executable in the /settings wizard
  /nostr - Shows the bot's nostr pubkey and the relays used to publish

  Communities:
  /community - Create a new community
  /mycomms - Shows the communities you have created
  /mycomm <_@community_> - Enter Community Admin Wizard
  /findcomms <_fiat code_> - Finds communities that operate with the indicated currency
  /setcomm <_@groupOfACommunity / off_> - Set a default community or remove it with 'off'
  /settleorder <_order id_> - Accept the seller's payment and automatically send the sats to the buyer, there must be a community by default
  /cancelorder <_id orden_> - Cancels the order which returns the sats to the seller, there must be a community by default
  /deldispute <_username_> <_id order_> - Deletes a dispute from the user in the community, there must be a community by default
  /ban <_username_> - Ban a user from a community, there should be a default community
  /unban <_username_> - Unban a user from a community, there should be a default community

  /version - Shows the current version of the bot
  /help - Help messages
must_be_gt_or_eq: ${fieldName} Must be greater or equal to ${qty}
you_have_been_banned: You have been banned!
I_told_seller_you_sent_fiat: 🤖 I told @${sellerUsername} that you have sent the fiat money. Once the seller confirms the money was received, the sats should be sent to you.
buyer_told_me_that_sent_fiat: 🤖 @${buyerUsername} has informed that he already sent you the fiat money. Once you confirm the reception, please release funds. You will not be able to create another order until you release funds.
release_order_cmd: /release
you_have_orders_waiting: 🤖 you have one or more orders where the buyer informs that the fiat money was sent to you but you haven't released the sats yet. You will not be able to create new orders until you release such funds.
user_banned: Banned user!
user_unbanned: Unbanned user!
user_not_found: User was not found in the database!
parse_invoice_error: Error parsing invoice
invalid_id: Invalid ID
cant_take_own_order: You cannot take your own order.
send_me_lninvoice: Please send me a lightning invoice for ${amount} sats, although to make things easier for you, I also accept invoices without a specified amount. I will make the payment of ${amount} sats.
you_have_no_orders: You don't have active orders
not_rate_for_currency: |
  ${fiatRateProvider} There is no exchange rate for this currency,
  if you want to use this currency, you must indicate how many satoshis you want
  If you woud like this currency in the listing, go to this link to place a request. 👇

  🌐 https://yadio.io/api.html
invoice_with_incorrect_amount: the amount stated in the invoice is incorrect
invoice_updated: 📝 Invoice has been correctly updated!
invoice_updated_and_will_be_paid: Invoices has been correctly updated and will be paid in the next few seconds!
invoice_already_being_paid: You have alreday send an invoice for this order and I am trying to pay it in this very right moment.
lightning_address_saved: Lightning address has been saved
cancel_error: This order cannot be cancelled at this moment
cancel_success: 'You have cancelled the order ID: ${orderId}!'
cancelall_success: You have cancelled all your published orders!
order_cancelled_by_admin: 'Admin has cancelled the order ID: ${orderId}!'
order_completed: 'You have completed the order ID: ${orderId}!'
order_completed_by_admin: 'Admin has completed the order ID: ${orderId}!'
order_cancelled_by_counterparty: 'Your counterparty cancelled the order ID: ${orderId}!'
have_to_wait_for_counterpart: 🕒 You have already made this operation, you must wait for the other party to take action
ok_cooperativecancel: '👍 Counterparty agreed and the order ID: ${orderId} has been cancelled'
refund_cooperativecancel: 💰 You have received a refund of your lightning payment, there is no further action to make
init_cooperativecancel: '🕒 You have started the cancellation of the order ID: ${orderId}, your counterparty must agree on the cancellation too.'
counterparty_wants_cooperativecancel: '😳 Your counterparty wants to cancel order ID: ${orderId}. If you agree on such cancellation, please execute the following command 👇'
invoice_payment_failed: ⛔ I tried to send you the sats but the payment of your invoice failed, I will try ${attempts} more times in ${pendingPaymentWindow} minutes window, please check your node/wallet is online
cant_take_more_orders: ⛔ Sorry! You can't take another order while you have others waiting for you
seller_released: 💸 Seller has already released the satoshis, you must wait for your invoice to be paid.
your_purchase_is_completed: |
  🪙 Your satoshis purchase has been completed successfully, @${sellerUsername} has confirmed your fiat payment and I have paid your invoice, enjoy sound money!

  ⚡️🍊⚡️
problem_getting_price: There is a problem accessing this coin's price, please try later. If the problem persists, please get in touch with an administrator.
update_user_setting: I have modify the field ${field} to ${newState}
lightning_address_disabled: Lightning address disabled
invalid_range_with_amount: |
  Ranges are only available for floating rates

  Use ranges or specify the number of sats, but do not write both of them
too_many_pending_orders: You have reached the maximum amount of orders that can be published simultaneously
name: Name
group: Group
channel: Channel
solver: Solver
published: Published
created: Created
yes: Yes
no: No
wizard_add_invoice_init: |
  🤖 I need you to send me an invoice for ${satsAmount} satoshis that is worth ${currency} ${fiatAmount} so I can send you the money.

  If you do not send the invoice within ${expirationTime} minutes the order will be cancelled
wizard_add_invoice_exit: |
  You have exited wizard mode, you can now write down the commands and add an invoice to the order with the command /setinvoice indicating Order ID and Invoice. You may send me an invoice for ${amount} satoshis, but I also accept invoices with no amount specified:

  `/setinvoice ${orderId} `\\<lightning invoice with or without amount\\>
wizard_community_enter_name: Pick a name for your community
wizard_community_too_long_name: The name can have a maximum length of ${length} characters.
wizard_community_enter_currency: Enter the code of the fiat currency(ies) with which users can operate in this community, if there is more than one you must enter each code separated by a blank space.
wizard_community_enter_group: |
  Pick an ID or a name for the group, the bot and you must be group administrators:

  i.e: @MyCommunity
wizard_community_enter_order_channels: |
  All orders of your community must be published in a telegram channel, if you indicate me only one channel both Buy and Sell orders will be published there.

  If you indicate two channels, Buy orders will be place in one and Sell orders in the other. Both you and the bot must be administrators in both channels.

  Please indicate the name of the channel, or in case you want to use two chanels, indicate both names separated by a space.

  i.e : @MyCommunitySell  @MyCommunityBuy
wizard_community_one_or_two_channels: You must indicate either one or two channels
wizard_community_enter_solvers: Now please write down the names of the users that will sort out disputes, each of them separated by a space.
wizard_community_must_enter_names: You must add at least one name, or two separated by a space
wizard_community_enter_solvers_channel: Indicate the ID or name of the channel that the bot must use to alert when a dispute is called, please use @ at the beginning of the channel name.
wizard_community_success: |
  Congratulations, you have created your community!

  In order for your community to remain active it must have successfully completed orders in the last ${days} days.
wizard_community_wrong_permissions: You do not have administrator permits for this group or channel
wizard_community_you_are_not_admin: You are not admin on ${channel}.
wizard_community_duplicated_name: The name you entered is already in use by another community, try again with a different one.
wizard_to_exit: /exit to exit the wizard.
wizard_exit: You have exited wizard mode, you can now write commands
wizard_add_fiat_amount: |
  Please indicate the amount of ${currency} you want to ${action}.

  Remember it must be only numbers and be between ${minAmount} and ${maxAmount}:
wizard_add_fiat_wrong_amount: Invalid amount, input must be between ${minAmount} and ${maxAmount}, it must be only numbers.
wizard_add_fiat_correct_amount: 'Amount: ${currency} ${fiatAmount}.'
order_expired: This order has expired!
cant_add_invoice: You can no longer add an invoice to this order!
expired_order: |
  This order has expired without completion

  ${detailedOrder}

  @${sellerUser.username} has ${sellerUser.disputes} disputes
  @${buyerUser.username} has ${buyerUser.disputes} disputes
expired_order_to_buyer: |
  🚨🚨🚨 This order is about to expire and must be completed or cancelled immediately, if you haven't sent the fiat money yet, you can still cancel with the /cancel command.

  If you sent the fiat money but the seller refuses to release the sats, you can open a dispute with the /dispute command. The hold invoice that the seller paid has an expiration time and you must resolve this order before it expires or you risk losing your money.

  If you need help, you can write to the group ${helpGroup}
expired_order_to_seller: |
  🚨🚨🚨 This order is about to expire and must be completed or cancelled immediately, if you haven't received the fiat money yet, you can still cancel with the /cancel command.

  If you received the fiat money please release the funds with the /release command, otherwise you are at risk of the buyer opening a dispute which will affect your reputation.

  If you need help, you can write to the group ${helpGroup}
didnt_add_invoice: '🤨 You have not sent the invoice to receive sats for the order ID: ${orderId}'
buyer_havent_add_invoice: '😔 Buyer has not sent me the invoice to receive the sats for your order ID: ${orderId}, your sats were sent back to you'
buyer_havent_add_invoice_to_admin_channel: 'Buyer @${username} took the order ID: ${orderId} but has not sent the invoice where to receive sats, time has expired, the order has being republished.'
havent_paid_invoice: '🤨 You have not paid the invoice to sell sats for the order ID: ${orderId}'
seller_havent_paid_invoice: '😔 Seller has not paid the invoice for your purchase ID: ${orderId}, the operation was cancelled.'
seller_havent_add_invoice_to_admin_channel: 'Seller @${username} has not paid the invoice of order ID: ${orderId} time lapse ended and the order has been published again.'
pending_payment_success_to_admin: |
  User @${username} had a pending invoice, the payment for buying order ID: ${orderId} for ${amount} satoshis, was finally executed after ${attempts} attempts.

  Proof of payment: ${paymentSecret}
pending_payment_success: |
  I have paid the lightning invoice for ${amount} satoshis, order ID: ${id}!

  Proof of payment: ${paymentSecret}
pending_payment_failed: |
  🤖 I have tried to pay your invoice ${attempts} times and failed. Sometimes the Lightning Network users can't receive payments because their wallet has not enough inbound liquidity or the node is not well connected in the network. You might want to try to generate an invoice from another wallet.
pending_payment_failed_to_admin: |
  Payment of the invoice for the Buy order ${orderId} of user @${username} has failed.

  Payment attempts: ${attempts}
selling: Selling
buying: Buying
receive_payment: Receive payment
pay: Pay
is: is
trading_volume: 'Trading volume: ${volume} sats'
satoshis: satoshis
by: by
rate: Rate
has_successful_trades: Has ${trades} successful trades
user_age: "Has been using the bot for ${pluralize(days, 'day', 'days')}"
price: Price
for: For
generic_error: An error occurred
sats: sats
no_capital_letters: 🤖 You are trying to execute a command with the first letter capitalized. Please write the entire command in lowercase.
unknown_command: 😕 I do not understand. Please use /help to see the list of available commands
invoice_invalid_error: |
  Error parsing the invoice. Please copy-paste a lightning invoice starting with 'lnbc'.

  If you want to abort and return to the command entering mode just run /exit
invoice_expiry_too_short_error: Invoice expiry is too short
invoice_has_expired_error: Invoice has expired
invoice_has_wrong_destination_error: Invoice has a wrong destination
invoice_must_be_larger_error: Invoice must be for at least ${minInvoice} sats
hours: hours
minutes: minutes
community_updated: Community successfully updated
operation_successful: Operation successful!
select_community: Select the community
what_modify: What do you want to modify?
channels: Channels
dispute_solvers: Solvers
no_default_community: You no longer have a community by default
community_not_found: Community not found
currency: Currency
currencies: Currencies
currency_not_supported: |
  This currency cannot be used in this community, it is only allowed to use [${currencies}].

  You can leave this community executing /setcomm off
press_to_continue: Press the button to continue
receive: receive
send: send
new_dispute: ⚠️⚠️⚠️ A user has started a dispute, press the button to take it
take_dispute: Take dispute
not_authorized: 🤨 You are not authorized to perform this operation
need_default_community: To perform this operation, you need to have a default community
enter_sats_amount: Enter sats amount, enter only numbers.
market_price: Market price
enter_currency: 'Enter a currency by your code, eg: USD'
choose_currency: Choose a currency
enter_currency_amount: Enter the amount of ${currency}, enter only numbers.
enter_premium_discount: Enter the premium(+) or discount(-) to apply to the market price.
no_premium_or_discount: No premium or discount
enter_payment_method: Enter the payment method
invalid_currency: Invalid currency
not_number: It must be a number
not_zero: Cannot be 0 (zero)
not_negative: Cannot be a negative number
wizard_community_wrong_percent: The percentage must be between 0 and 100
wizard_community_enter_fee_percent: |
  Enter the fee:

  The fee in a community is variable and is indicated as a percentage from 0 to 100. If you do not want to charge a fee, indicate 0. If you want to charge half of the maximum value, indicate 50, if you want it to have the maximum value, indicate 100.
fee: Fee
use_default: Use by default
orders: Orders
volume: Volume
users: Users
not_found_dispute: There is no dispute for this order
max_allowed: The maximum allowed is ${max}
dispute_channel: Dispute channel
not_wizard: You are not in wizard mode at the moment, if you have doubts you can type /help
wizard_help: You are in wizard mode, if you need to go back to command mode run /exit
hold_invoice_memo: '@${botName} - Escrow amount Order #${orderId}: SELL BTC for ${fiatCode} ${fiatAmount} - It WILL FREEZE IN YOUR WALLET. It will release once you run /release. It will return if buyer does not confirm the payment'
tap_button: Select an order to perform the operation
tap_release: Select the order to release the funds, once you press the button, the operation cannot be reversed.
earnings: Earnings
premium: Premium
discount: Discount
premium_discount: premium/discount
withdraw_earnings: Withdraw earnings
invoice_expired_earnings: The invoice has expired, resubmit a withdrawal request with a new invoice.
what_to_do: What do you want to do?
community: Community
seller_already_released: Don't worry, the seller has already released the funds 🥲
select_language: Select language
must_enter_text: You must enter only text
current_earnings: |
  Orders completed so far in the community: ${ordersToRedeem}

  Community Earnings: ${earnings} sats
you_dont_have_communities: You have no communities created
users_added: 'You have added: ${users}'
users_not_added: 'Could not add to: ${users}; please make sure these users have started the bot'
delete_community: Delete community
are_you_sure: Are you sure?
no_permission: You do not have permission to perform this operation
make_public: Make public
make_private: Make private
bot_kicked: bot was kicked from the chat, it must be a member and admin
chat_not_found: Chat not found. Are you sure you added the bot to the group/channel?
not_member: You are not a member of that chat
upgraded_to_supergroup: The chat was upgraded to 'supergroup' and the ID has changed, check the chat ID again
community_deleted: This community was deleted due to inactivity. I have unlinked you from it, try to create the order again
dispute_too_soon: You can't start a dispute too soon, be patient and wait a few minutes for your counterparty to reply
maintenance: 🚨 Bot in maintenance, please try again later 🚨

# START modules/community
community_admin: |
  <strong>Community Admin Mode</strong>
  > ${community.name} (${community.group})
  
  Public:
    ${community.public ? 'Yes' : 'No'}
  Fee:
    ${community.fee}
  Earnings:
    ${community.earnings}
  npub:
    <code>${community.nostr_public_key || ''}</code>

  /help - help messages.
  /exit - to exit the wizard.
community_admin_help: |
  <strong>Community Admin Mode</strong>
  # commands

  /setnpub &lt;npub&gt; - Configure community's public key. Nostr events will be tagged with this public key.
community_npub_updated: You added the community's pubkey ${npub} successfully!
# END modules/community

# START modules/nostr
user_npub_updated: You added your pubkey ${npub} successfully!
nostr_info: |
  npub:
  <code>${npub}</code>

  hex:
  <code>${publicKey}</code>

  relays:
  ${relays}
npub_not_valid: |
  Not a valid <a href="https://github.com/nostr-protocol/nips/blob/master/19.md">NIP-19</a> npub. Please check your input.
  Example:
  /setnpub npub180cvv07tjdrrgpa0j7j7tmnyl2yr6yr7l8j4s3evf6u64th6gkwsyjh6w6
# END modules/nostr

# START modules/orders
order_not_found: Order not found.
# END modules/orders

# START modules/user
user_settings: |
  <strong>User settings for @${user.username}</strong>

  Language:
    ${language.emoji} ${language.name}
  Community:
    ${community || '🛇'}
  npub:
    <code>${npub || '🛇'}</code>
  lightning address:
    <code>${lightning_address || '🛇'}</code>

  <strong># HELP</strong>
  /setnpub &lt;npub&gt; - Configure user public key. Nostr events will be tagged with this public key.
  /exit - to exit the wizard.
# END modules/user
# check hold invoice
invoice_settled: Invoice already settled
invoice_cancelled: Invoice cancelled
invoice_held: Invoice held
invoice_no_info: I don't have information for that invoice
bot_info: |
  Bot fee: ${bot_fee}

  Max routing fee: ${routing_fee}

  Node URI: `${node_uri}`
  
  Node status: ${status}
disclaimer: |
  *By using the P2P trade bot, you agree to the following terms and conditions:*

  The bot is an open-source software that is available for anyone to use, copy, modify, and run. The developers are not responsible for the actions of other individuals using the software in any manner, whether legal or illegal, honest or dishonest.

  The bot is provided on an "as is" and "as available" basis, and the developers make no warranties of any kind, express or implied, with respect to the bot or its use.

  The developers and the dispute resolvers make their best efforts to remove bad actors, frauds, and scams from using the bot, but the user recognizes that the system can be exploited and accepts full responsibility while using it.

  Neither the developers nor the dispute resolvers are responsible for any losses or damages that the user may suffer as a result of using the bot.